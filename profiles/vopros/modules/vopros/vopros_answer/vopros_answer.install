<?php

/**
 * Implements hook_schema().
 */
function vopros_answer_schema() {
  $schema = array();

  $schema['vopros_answer'] = array(
    'description' => 'The base table for orders.',
    'fields' => array(
      'answer_id' => array(
        'description' => 'The primary identifier for an answer.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'question_id' => array(
        'description' => 'Reference to the question being answered.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'The uid of the user answering the question.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'author_name' => array(
        'description' => 'The name of the answer author.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'answer_content' => array(
        'description' => 'The actual answer that has been asked.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'tmp_answer_content' => array(
        'description' => 'A temporary answer content.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'status' => array(
        'description' => 'The status of the answer.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'revision_id' => array(
        'description' => 'The current {vopros_answer_revision}.revision_id version identifier.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'created' => array(
        'description' => 'The Unix timestamp when the answer was created.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'changed' => array(
        'description' => 'The Unix timestamp when the answer was most recently saved.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uuid' => uuid_schema_field_definition(),
    ),
    'primary key' => array('answer_id'),
    'unique keys' => array(
      'revision_id' => array('revision_id'),
    ),
    'indexes' => array(
      'question_id' => array('question_id'),
      'uid' => array('uid'),
    ),
    'foreign keys' => array(
      'current_revision' => array(
        'table' => 'vopros_answer_revision',
        'columns'=> array('revision_id' => 'revision_id'),
      ),
      'question' => array(
        'table' => 'vopros_question',
        'columns'=> array('question_id' => 'question_id'),
      ),
    ),
  );

  $schema['vopros_answer_revision'] = array(
    'description' => 'Saves information about each saved revision of a {vopros_answer}.',
    'fields' => array(
      'revision_id' => array(
        'description' => 'The primary identifier for this revision.',
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
      ),
      'revision_uid' => array(
        'description' => 'The {users}.uid that created this revision.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'answer_id' => array(
        'description' => 'The {vopros_answer}.answer_id of the answer this revision belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'question_id' => array(
        'description' => 'The {vopros_question}.question_id of the question this revision belongs to.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'uid' => array(
        'description' => 'The uid of the user answering the question.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'author_name' => array(
        'description' => 'The status of the answer.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'answer_content' => array(
        'description' => 'The actual answer that has been asked.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'tmp_answer_content' => array(
        'description' => 'A temporary answer content.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'status' => array(
        'description' => 'The status of the answer.',
        'type' => 'varchar',
        'length' => '255',
        'not null' => TRUE,
      ),
      'log' => array(
        'description' => 'The log entry explaining the changes in this version.',
        'type' => 'text',
        'not null' => TRUE,
        'size' => 'big',
      ),
      'revision_timestamp' => array(
        'description' => 'The Unix timestamp when this revision was created/changed.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uuid' => uuid_schema_field_definition(),
    ),
    'primary key' => array('revision_id'),
    'indexes' => array(
      'question_id' => array('question_id'),
      'answer_id' => array('answer_id'),
      'uid' => array('uid'),
      'revision_uid' => array('revision_uid'),
    ),
    'foreign keys' => array(
      'answer' => array(
        'table' => 'vopros_answer',
        'columns'=> array('answer_id' => 'answer_id'),
      ),
    ),
  );

  return $schema;
}

/**
 * Add indexes on vopros answer tables.
 */
function vopros_answer_update_7000(&$sandbox) {
  // Add indexes on the main table.
  db_add_index('vopros_answer', 'question_id', array('question_id'));
  // Add indexes on the revision table.
  db_add_index('vopros_answer_revision', 'question_id', array('question_id'));
}

/**
 * Add indexes on vopros answer tables.
 */
function vopros_answer_update_7001(&$sandbox) {
  // Add indexes on the main table.
  db_add_index('vopros_answer', 'uid', array('uid'));
  // Add indexes on the revision table.
  db_add_index('vopros_answer_revision', 'answer_id', array('answer_id'));
  db_add_index('vopros_answer_revision', 'uid', array('uid'));
  db_add_index('vopros_answer_revision', 'revision_uid', array('revision_uid'));
}

/**
 * Add tmp answer content to answer tables.
 */
function vopros_answer_update_7002(&$sandbox) {
  db_add_field('vopros_answer', 'tmp_answer_content', array(
    'description' => 'A temporary answer content.',
    'type' => 'text',
    'size' => 'big',
  ));
  db_add_field('vopros_answer_revision', 'tmp_answer_content', array(
    'description' => 'A temporary answer content.',
    'type' => 'text',
    'size' => 'big',
  ));
}
